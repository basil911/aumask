#summary How it works (incomplete).

= Partial algorithm of advanced unsharp mask =

Goal of this wiki is to 

  # explain how RGB values are processed by individual colorspaces
  # provide room for discussion and description of implementation of other color modes - as required by users


= Current processing as by 0.8 version: =



|| step || OWN || HSV || HSL ||
|| initial conversion || r = (R/255)^(1/2.2) || r=R/255 || r=R/255 ||
|| calculating value|| 0.299*t + 0.587*g + 0.114*b || gimp_rgb_to_hsv || gimp_rgb_to_hsl ||
|| getting new brightness || common algorithm ||
|| getting new values (floats 0-1) || RGB differences added to new brightness || gimp_hsv_to_rgb() where v is changed || gimp_hsl_to_rgb() where l is changed ||
|| getting int (0-255) || (r^2.2)*255 || r*255 || r*255||


few comments to the table

   * R,G and B are used for integers 0-255
   * r,g and b are used for floats 0-1
   * in lines where I list only formula for r, the same is used for g and b
   * values below 0 and above 1 are clipped before conversion to final RGB.

= Algorithm of advanced unsharp mask =

Goal of this wiki is to 

  # explain how RGB values are processed
  # provide room for discussion and description of implementation of other color modes - as required by users

This page is to be continuously worked on and added.

= Current processing as by 0.6.3 version: =

following variables are used in explanation
{{{
gint Rint,Gint,Bint          # RGB values 0 - 255 as stored in common RGB images, these are input and output 
                             #values for the plugin
gfloat Rfloat,Gfloat,Bfloat  # RGB values converted to range 0-1, during processing can get out 
                             # of this range (no problem mathematically)
gfloat avg,new_avg           #brightness (or call it whatever you what) of individual pixel, initially in the
                             # range 0-1, but after processing can get out of this range, avg is orignal,
                             # avg_new is final brightness
}}}

1. RGB values are gammed and converted to float in range 0-1

{{{
   Rfloat=(Rint/255)^(1/2.2)
   Gfloat=(Gint/255)^(1/2.2) 
   Bfloat=(Bint/255)^(1/2.2) 
}}}

2. brightness is calculated 
{{{
   avg=(R+G+B)/3                    #0.6.4 and before
   avg=0.299*R + 0.587*G + 0.114*B  #0.6.5 and on
}}}
(this is to be changed for wighted average in next version)

3. new brightness (avg_new) is calculated (description how is not subject of this page)


4. New Rfloat, Gfloat,Bfloat are caluclated:

{{{
   Rfloat= avg_new+Rfloat-avg
   Gfloat= avg_new+Gfloat-avg
   Bfloat= avg_new+Bfloat-avg
}}}
5. RGB (floats) are converted back to integers in range 0-255

{{{   
  Rint=ROUND( (Rfloat ^ 2.2) * 255 )
  Gint=ROUND( (Gfloat ^ 2.2) * 255 )
  Bint=ROUND( (Bfloat ^ 2.2) * 255 )
}}}

values below 0 and above 255 are clipped.

**This page is incomplete and I dont work on it. If you are interesting in more details, let me know -by email if possible**